shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
population <- gsheet2tbl('docs.google.com/spreadsheets/d/1ACQnSbPG6oDPEc0o3oVF-gdyoImhSXzLe0rS3d_xxiQ/edit?gid=0#gid=0')
population
library(gsheet)
adhb <- gsheet2tbl('docs.google.com/spreadsheets/d/1zX-sS-QRhgQw8N5I0OU-Su06NBRm66J1/edit?gid=326092188#gid=326092188') %>%
mutate(kode = factor(kode)) %>%
mutate(across(4:ncol(.), ~ round(., 4)))
s
adhb
runApp()
runApp()
runApp()
runApp()
adhk_perkapita
adhk_perkapita <- calculate_per_capita(adhk, population)
calculate_per_capita <- function(adhb, population) {
# Menentukan kolom-kolom yang mengandung data tahun secara dinamis
tahun_columns <- grep("^\\d{4}", names(adhb), value = TRUE)
# Pivot data dari wide ke long berdasarkan kolom tahun yang ditemukan
adhb_long <- adhb %>%
tidyr::pivot_longer(cols = all_of(tahun_columns),
names_to = "year_quarter", values_to = "PDRB") %>%
mutate(
year = as.numeric(substr(year_quarter, 1, 4)),  # Extract tahun
quarter = as.numeric(substr(year_quarter, 6, 6))  # Extract triwulan
)
# Menggabungkan dengan data populasi
adhb_long <- adhb_long %>%
left_join(population, by = c("year" = "periode")) %>%
mutate(PDRB_per_capita = PDRB / population)
# Pivot kembali menjadi wide untuk setiap tahun dan triwulan
adhb_wide <- adhb_long %>%
select(flag, kode, nama, year_quarter, PDRB_per_capita) %>%
tidyr::pivot_wider(names_from = year_quarter, values_from = PDRB_per_capita)
return(adhb_wide)
}
adhk_perkapita <- calculate_per_capita(adhk, population)
adhk <- gsheet2tbl('docs.google.com/spreadsheets/d/1FeTRkKfhJc4z29vP5ftXL2hNBolYTtQU/edit?gid=1723490359#gid=1723490359') %>%
mutate(kode = factor(kode)) %>%
mutate(across(4:ncol(.), ~ round(., 4)))
adhk_perkapita <- calculate_per_capita(adhk, population)
population <- gsheet2tbl('docs.google.com/spreadsheets/d/1ACQnSbPG6oDPEc0o3oVF-gdyoImhSXzLe0rS3d_xxiQ/edit?gid=0#gid=0')
adhk_perkapita <- calculate_per_capita(adhk, population)
adhk_perkapita
runApp()
adhb
# Jika ingin kembali ke format wide
qtq_data_wide <- qtq_data %>%
select(flag, kode, nama, periode, qtq) %>%
tidyr::pivot_wider(names_from = periode, values_from = qtq)
# DATA PERTUMBUHAN - Dari ADHK
qtq_data <- adhk %>%
tidyr::pivot_longer(
cols = starts_with("201"),
names_to = "periode",
values_to = "nilai"
) %>%
arrange(kode, periode) %>%
group_by(kode) %>%
mutate(
qtq = (nilai / lag(nilai)) * 100
) %>%
ungroup()
qtq_data
# DATA PERTUMBUHAN - Dari ADHK
qtq_data <- adhk %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun (4 digit) dan underscore
names_to = "periode",
values_to = "nilai"
) %>%
arrange(kode, periode) %>%
group_by(kode) %>%
mutate(
qtq = (nilai / lag(nilai)) * 100  # Hitung qtq
) %>%
ungroup()
qtq_data
# DATA PERTUMBUHAN - Dari ADHK
qtq_data <- adhk %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun (4 digit) dan underscore
names_to = "periode",
values_to = "nilai"
) %>%
arrange(kode, periode) %>%
group_by(kode) %>%
mutate(
qtq = ((nilai / lag(nilai)) * 100) - 100  # Hitung qtq
) %>%
ungroup()
qtq_data
# Jika ingin kembali ke format wide
qtq_data_wide <- qtq_data %>%
select(flag, kode, nama, periode, qtq) %>%
tidyr::pivot_wider(names_from = periode, values_from = qtq)
qtq_data_wide
yoy_data <- adhk %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),        # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6))     # Ekstrak triwulan
) %>%
arrange(kode, year, quarter) %>%
group_by(kode, quarter) %>%
mutate(
yoy = (nilai / lag(nilai, 1)) * 100 - 100       # Hitung YoY (dibandingkan dengan tahun sebelumnya pada triwulan yang sama)
) %>%
ungroup()
yoy_data
ctc_data <- adhb %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),        # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6))     # Ekstrak triwulan
) %>%
arrange(kode, year, quarter) %>%
group_by(kode, quarter) %>%
mutate(
ctc = (cumsum(nilai) / cumsum(lag(nilai, order_by = year))) * 100 - 100   # Hitung C-to-C (kumulatif dibandingkan dengan kumulatif tahun sebelumnya)
) %>%
ungroup()
ctc_data
ctc_data <- adhb %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),        # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6))     # Ekstrak triwulan
) %>%
arrange(kode, year, quarter) %>%
group_by(kode, quarter) %>%
mutate(
# Hanya hitung C-to-C untuk triwulan kedua dan seterusnya
ctc = ifelse(quarter > 1,
(cumsum(nilai) / cumsum(lag(nilai, order_by = year))) * 100 - 100,
NA)  # Set C-to-C NA untuk triwulan pertama
) %>%
ungroup()
ctc_data
ctc_data <- adhb %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),        # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6))     # Ekstrak triwulan
) %>%
arrange(kode, year, quarter) %>%
group_by(kode, quarter) %>%
mutate(
ctc = (cumsum(nilai) / cumsum(lag(nilai, order_by = year))) * 100 - 100   # Hitung C-to-C (kumulatif dibandingkan dengan kumulatif tahun sebelumnya)
) %>%
ungroup()
ctc_data
ctc_data <- adhb %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode, year) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
quarter == 1 ~ (nilai / lag(nilai)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter > 1 ~ (cumsum(nilai) / cumsum(lag(nilai, order_by = year))) * 100 - 100  # C-to-C Cumulative untuk triwulan berikutnya
)
) %>%
ungroup() %>%
filter(!is.na(ctc))  # Menghapus NA yang muncul pada perhitungan C-to-C pertama
ctc_data
ctc_data <- adhb %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode, year) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
quarter == 1 ~ (nilai / lag(nilai)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter > 1 ~ (cumsum(nilai) / cumsum(lag(nilai, order_by = year))) * 100 - 100  # C-to-C Cumulative untuk triwulan berikutnya
)
) %>%
ungroup() %>%
filter(!is.na(ctc))  # Menghapus NA yang muncul pada perhitungan C-to-C pertama
ctc_data <- adhb %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode, year) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
quarter == 1 ~ (nilai / lag(nilai)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter > 1 ~ (cumsum(nilai) / cumsum(lag(nilai, order_by = year))) * 100 - 100  # C-to-C Cumulative untuk triwulan berikutnya
)
) %>%
ungroup()
calculate_ctc <- function(df) {
df_ctc <- df %>%
group_by(kode, nama) %>%
mutate(
# Menghitung CTC mulai dari tahun kedua
ctc = ifelse(year == min(year) + 1,
(value / lag(value)) * 100 - 100,
NA)
) %>%
ungroup()
# Melakukan perhitungan CTC untuk tahun-tahun berikutnya secara kumulatif
for (i in seq(min(df$year) + 2, max(df$year))) {
df_ctc <- df_ctc %>%
group_by(kode, nama) %>%
mutate(
ctc = ifelse(year == i,
(cumsum(value[year <= i]) / cumsum(lag(value)[year <= i]))) * 100 - 100,
ctc) %>% ungroup()
}
return(df_ctc)
}
# Menghitung CTC
df_ctc <- calculate_ctc(adhk)
ctc_data <- adhb %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
year == 2017 ~ NA_real_,  # Tidak ada CTC untuk tahun 2017
quarter == 1 ~ (nilai / lag(nilai)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter > 1 ~ (cumsum(nilai) / cumsum(lag(nilai, order_by = year))) * 100 - 100  # C-to-C Cumulative untuk triwulan berikutnya
)
) %>%
ungroup() %>%
filter(!is.na(ctc))  # Menghapus NA yang muncul pada perhitungan C-to-C pertama (untuk 2017)
ctc_data
View(ctc_data)
ctc_data <- adhb %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
year == 2017 ~ NA_real_,  # Tidak ada CTC untuk tahun 2017
quarter == 1 ~ (nilai / lag(nilai, order_by = year)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter > 1 ~ (cumsum(nilai) / cumsum(lag(nilai, order_by = year))) * 100 - 100  # C-to-C Cumulative untuk triwulan berikutnya
)
) %>%
ungroup()  # Menghapus pengelompokan
View(ctc_data)
ctc_data <- adhb %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
year == 2017 ~ NA_real_,  # Tidak ada CTC untuk tahun 2017
quarter == 1 ~ (nilai / lag(nilai)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter == 2 ~ ((nilai + lag(nilai)) / (lag(nilai, 1) + lag(nilai, 2))) * 100 - 100,  # CTC untuk triwulan 2
quarter == 3 ~ ((nilai + lag(nilai) + lag(nilai, 2)) / (lag(nilai, 1) + lag(nilai, 2) + lag(nilai, 3))) * 100 - 100,  # CTC untuk triwulan 3
quarter == 4 ~ ((nilai + lag(nilai) + lag(nilai, 2) + lag(nilai, 3)) / (lag(nilai, 1) + lag(nilai, 2) + lag(nilai, 3) + lag(nilai, 4))) * 100 - 100  # CTC untuk triwulan 4
)
) %>%
ungroup()  # Menghapus pengelompokan
View(ctc_data)
ctc_data <- adhk %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
year == 2017 ~ NA_real_,  # Tidak ada CTC untuk tahun 2017
quarter == 1 ~ (nilai / lag(nilai)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter == 2 ~ ((nilai + lag(nilai)) / (lag(nilai, 1) + lag(nilai, 2))) * 100 - 100,  # CTC untuk triwulan 2
quarter == 3 ~ ((nilai + lag(nilai) + lag(nilai, 2)) / (lag(nilai, 1) + lag(nilai, 2) + lag(nilai, 3))) * 100 - 100,  # CTC untuk triwulan 3
quarter == 4 ~ ((nilai + lag(nilai) + lag(nilai, 2) + lag(nilai, 3)) / (lag(nilai, 1) + lag(nilai, 2) + lag(nilai, 3) + lag(nilai, 4))) * 100 - 100  # CTC untuk triwulan 4
)
) %>%
ungroup()  # Menghapus pengelompokan
View(ctc_data)
ctc_data <- adhk %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
year == 2017 ~ NA_real_,  # Tidak ada CTC untuk tahun 2017
quarter == 1 ~ (nilai / lag(nilai, 4)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter == 2 ~ ((nilai + lag(nilai)) / (lag(nilai, 1) + lag(nilai, 2))) * 100 - 100,  # CTC untuk triwulan 2
quarter == 3 ~ ((nilai + lag(nilai) + lag(nilai, 2)) / (lag(nilai, 1) + lag(nilai, 2) + lag(nilai, 3))) * 100 - 100,  # CTC untuk triwulan 3
quarter == 4 ~ ((nilai + lag(nilai) + lag(nilai, 2) + lag(nilai, 3)) / (lag(nilai, 1) + lag(nilai, 2) + lag(nilai, 3) + lag(nilai, 4))) * 100 - 100  # CTC untuk triwulan 4
)
) %>%
ungroup()  # Menghapus pengelompokan
View(ctc_data)
ctc_data <- adhk %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
year == 2017 ~ NA_real_,  # Tidak ada CTC untuk tahun 2017
quarter == 1 ~ (nilai / lag(nilai, 4)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter == 2 ~ (nilai + lag(nilai)) / (lag(nilai, 5) + lag(nilai, 4)) * 100 - 100,  # CTC untuk triwulan 2
quarter == 3 ~ ((nilai + lag(nilai) + lag(nilai, 2)) / (lag(nilai, 1) + lag(nilai, 2) + lag(nilai, 3))) * 100 - 100,  # CTC untuk triwulan 3
quarter == 4 ~ ((nilai + lag(nilai) + lag(nilai, 2) + lag(nilai, 3)) / (lag(nilai, 1) + lag(nilai, 2) + lag(nilai, 3) + lag(nilai, 4))) * 100 - 100  # CTC untuk triwulan 4
)
) %>%
ungroup()  # Menghapus pengelompokan
View(ctc_data)
ctc_data <- adhk %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun dan kuartal
names_to = "periode",
values_to = "nilai"
) %>%
mutate(
year = as.numeric(substr(periode, 1, 4)),  # Ekstrak tahun
quarter = as.numeric(substr(periode, 6, 6)),  # Ekstrak triwulan
flag_kode = paste(flag, kode, sep = "_")  # Gabungkan flag dan kode menjadi satu identifier
) %>%
group_by(flag_kode, kode) %>%
arrange(kode, year, quarter) %>%
mutate(
# C-to-C: (nilai saat ini / nilai tahun sebelumnya) * 100 - 100
ctc = case_when(
year == 2017 ~ NA_real_,  # Tidak ada CTC untuk tahun 2017
quarter == 1 ~ (nilai / lag(nilai, 4)) * 100 - 100,  # C-to-C untuk triwulan 1
quarter == 2 ~ (nilai + lag(nilai)) / (lag(nilai, 5) + lag(nilai, 4)) * 100 - 100,  # CTC untuk triwulan 2
quarter == 3 ~ ((nilai + lag(nilai) + lag(nilai, 2)) / (lag(nilai, 6) + lag(nilai, 5) + lag(nilai, 4))) * 100 - 100,  # CTC untuk triwulan 3
quarter == 4 ~ ((nilai + lag(nilai) + lag(nilai, 2) + lag(nilai, 3)) / (lag(nilai, 7) + lag(nilai, 6) + lag(nilai, 5) + lag(nilai, 4))) * 100 - 100  # CTC untuk triwulan 4
)
) %>%
ungroup()  # Menghapus pengelompokan
View(ctc_data)
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
qtq_data
# DATA PERTUMBUHAN - Dari ADHK
qtq_data <- adhk %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun (4 digit) dan underscore
names_to = "periode",
values_to = "nilai"
) %>%
arrange(kode, periode) %>%
group_by(kode) %>%
mutate(
qtq = ((nilai / lag(nilai)) * 100) - 100  # Hitung qtq
) %>%
ungroup()
# DATA ADHK ==================================================================
adhk <- gsheet2tbl('docs.google.com/spreadsheets/d/1FeTRkKfhJc4z29vP5ftXL2hNBolYTtQU/edit?gid=1723490359#gid=1723490359') %>%
mutate(kode = factor(kode)) %>%
mutate(across(4:ncol(.), ~ round(., 4)))
# DATA PERTUMBUHAN - Dari ADHK
qtq_data <- adhk %>%
tidyr::pivot_longer(
cols = matches("^\\d{4}_.+"),  # Pilih kolom dengan tahun (4 digit) dan underscore
names_to = "periode",
values_to = "nilai"
) %>%
arrange(kode, periode) %>%
group_by(kode) %>%
mutate(
qtq = ((nilai / lag(nilai)) * 100) - 100  # Hitung qtq
) %>%
ungroup()
qtq_data
runApp()
# Jika ingin kembali ke format wide
qtq_data_wide <- qtq_data %>%
select(flag, kode, nama, periode, qtq) %>%
tidyr::pivot_wider(names_from = periode, values_from = qtq)
qtq_data_wide
runApp()
View(qtq_data)
max(qtq_data$qtq)
plot(qtq_data$qtq)
qtq_data
range(qtq_data$qtq)
sort(qtq_data$qtq)
